@model ListaDadosViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Competências Linguisticas</h1>

<p>
    <a class="btn btn-outline-primary" asp-action="Create">Novo registo</a>
</p>

<div class="col-md-4 card border-info mb-4">
    <div class="card-body">
        <h5 class="card-title">Pesquisa</h5>
        <form asp-action="Index" method="get">
            <div class="form-group">
                <label for="nomePesquisar" class="control-label">Nome</label>
                <input name="nomePesquisar" class="form-control" type="search" value="@Model.NomePesquisar" />
            </div>
            <div class="form-group">
                <input type="submit" value="Pesquisar" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Limpar</a>
            </div>
        </form>
    </div>
</div>

@if (Model.ComLing.Count() == 0)
{
    <p>Não existem dados para mostrar</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ComLing[0].Lingua)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ComLing[0].CompreensaoOral)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ComLing[0].Leitura)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ComLing[0].ProducaoOral)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ComLing[0].InteracaoOral)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ComLing[0].Escrita)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DadosPessoais)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ComLing)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lingua)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CompreensaoOral)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Leitura)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProducaoOral)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InteracaoOral)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Escrita)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DadosPessoais.Email)
                    </td>
                    <td>
                        @*<a asp-action="Edit" asp-route-id="@item.CompetenciasId">Edit</a> |*@
                        <a class="btn-outline-info" asp-action="Details" asp-route-id="@item.CompetenciasId">Detalhes</a> |
                        <a class="btn-outline-danger" asp-action="Delete" asp-route-id="@item.CompetenciasId">Apagar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <nav>
        <ul class="pagination">
            @{
                int paginaInicial = Model.Paginacao.PaginaAtual - Paginacao.NUMERO_PAGINAS_MOSTRAR_ANTES_DEPOIS;
                //int paginaInicial = Model.Paginacao.PaginaAtual - Paginacao.NUMERO_PAGINAS_MOSTRAR_ANTES_DEPOIS / 2;
                if (paginaInicial < 1)
                {
                    paginaInicial = 1;
                }

                int paginaFinal = Model.Paginacao.PaginaAtual + Paginacao.NUMERO_PAGINAS_MOSTRAR_ANTES_DEPOIS;
                //int paginaFinal = paginaInicial + Paginacao.NUMERO_PAGINAS_MOSTRAR_ANTES_DEPOIS - 1;
                if (paginaFinal > Model.Paginacao.TotalPaginas)
                {
                    paginaFinal = Model.Paginacao.TotalPaginas;
                }
            }

            <li class="page-item @(Model.Paginacao.PaginaAtual == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-pagina="1" asp-route-nomePesquisar="@Model.NomePesquisar">Primeiro</a>
            </li>

            @for (int i = paginaInicial; i <= paginaFinal; i++)
            {
                <li class="page-item @(Model.Paginacao.PaginaAtual == i ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pagina="@i" asp-route-nomePesquisar="@Model.NomePesquisar">@i</a>
                </li>
            }

            <li class="page-item @(Model.Paginacao.PaginaAtual == Model.Paginacao.TotalPaginas  ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-pagina="@Model.Paginacao.TotalPaginas" asp-route-nomePesquisar="@Model.NomePesquisar">Último</a>
            </li>
        </ul>
    </nav>
}
