// <auto-generated />
using System;
using CurriculumDavid.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurriculumDavid.Migrations
{
    [DbContext(typeof(CurriculumBdContext))]
    [Migration("20210202175523_CriarUtilizadores1")]
    partial class CriarUtilizadores1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CurriculumDavid.Models.ComLing", b =>
                {
                    b.Property<int>("CompetenciasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompreensaoOral")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int>("DadosPessoaisId")
                        .HasColumnType("int");

                    b.Property<string>("Escrita")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("InteracaoOral")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("Leitura")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("Lingua")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ProducaoOral")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("CompetenciasId");

                    b.HasIndex("DadosPessoaisId");

                    b.ToTable("ComLing");
                });

            modelBuilder.Entity("CurriculumDavid.Models.DadosPessoais", b =>
                {
                    b.Property<int>("DadosPessoaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DadosPessoaisId1")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.HasKey("DadosPessoaisId");

                    b.HasIndex("DadosPessoaisId1");

                    b.ToTable("DadosPessoais");
                });

            modelBuilder.Entity("CurriculumDavid.Models.EduFor", b =>
                {
                    b.Property<int>("EduForId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DadosPessoaisId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntFormadora")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("NomeFormacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("EduForId");

                    b.HasIndex("DadosPessoaisId");

                    b.ToTable("EduFor");
                });

            modelBuilder.Entity("CurriculumDavid.Models.ExpProfissional", b =>
                {
                    b.Property<int>("ExpProfissionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DadosPessoaisId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("ExpProfissionalId");

                    b.HasIndex("DadosPessoaisId");

                    b.ToTable("ExpProfissional");
                });

            modelBuilder.Entity("CurriculumDavid.Models.Utilizador", b =>
                {
                    b.Property<int>("UtilizadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.HasKey("UtilizadorId");

                    b.ToTable("Utilizador");
                });

            modelBuilder.Entity("CurriculumDavid.Models.ComLing", b =>
                {
                    b.HasOne("CurriculumDavid.Models.DadosPessoais", "DadosPessoais")
                        .WithMany("ComLings")
                        .HasForeignKey("DadosPessoaisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CurriculumDavid.Models.DadosPessoais", b =>
                {
                    b.HasOne("CurriculumDavid.Models.DadosPessoais", null)
                        .WithMany("DadosPessoai")
                        .HasForeignKey("DadosPessoaisId1");
                });

            modelBuilder.Entity("CurriculumDavid.Models.EduFor", b =>
                {
                    b.HasOne("CurriculumDavid.Models.DadosPessoais", "DadosPessoais")
                        .WithMany("EduFors")
                        .HasForeignKey("DadosPessoaisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CurriculumDavid.Models.ExpProfissional", b =>
                {
                    b.HasOne("CurriculumDavid.Models.DadosPessoais", "DadosPessoais")
                        .WithMany("ExpProfissionals")
                        .HasForeignKey("DadosPessoaisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
